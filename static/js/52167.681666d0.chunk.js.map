{"version":3,"file":"static/js/52167.681666d0.chunk.js","mappings":"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","sources":["Pages/app/Appraisal/AppraisalSection1/AppraisalSection1.jsx","Pages/app/Appraisal/AppraisalSection1/AppraisalSection1Container.jsx"],"sourcesContent":["import {\r\n\tTabs,\r\n\tHeaderPage,\r\n\tBackgroundForm,\r\n\tDeclarationsForm,\r\n\tGeneralInformationForm,\r\n} from \"Components/Appraisal\";\r\n\r\n// import { useEffect } from \"react\";\r\n// import { Status, Wrapper }   from \"@googlemaps/react-wrapper\";\r\n\r\nconst tabs = [\r\n\t{\r\n\t\ttitle        : \"Antecedentes\",\r\n\t\tTab          : BackgroundForm,\r\n\t\tsectionTitle : \"1.1 Antecedentes\",\r\n\t},\r\n\t{\r\n\t\ttitle        : \"Información General del Inmueble\",\r\n\t\tTab          : GeneralInformationForm,\r\n\t\tsectionTitle : \"1.2 Información General del Inmueble\",\r\n\t},\r\n\t{\r\n\t\ttitle        : \"Declaraciones y Advertencias\",\r\n\t\tTab          : DeclarationsForm,\r\n\t\tsectionTitle : \"1.3 Declaraciones y Advertencias\",\r\n\t},\r\n];\r\n\r\nconst AppraisalSection1 = ({\r\n\tdelegations : {\r\n\t\tonSubmit,\r\n\t\thookForm,\r\n\t\tisLoading,\r\n\t\tmapCenter,\r\n\t},\r\n}) => {\r\n\r\n\tconst { formState : { isDirty } } = hookForm;\r\n\r\n\treturn (\r\n\t\t<div id=\"AppraisalSection1\">\r\n\t\t\t<HeaderPage\r\n\t\t\t\tcurrentIndex={[0, 0]}\r\n\t\t\t\tsection=\"body\"\r\n\t\t\t\tisDirty={isDirty}\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\tisSubmitingData={isLoading}\r\n\t\t\t/>\r\n\r\n\t\t\t<Tabs\r\n\t\t\t\ttabs={tabs}\r\n\t\t\t\thookForm={hookForm}\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\tisSubmitingData={isLoading}\r\n\t\t\t\tmapCenter={mapCenter}\r\n\t\t\t />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n//TODO: Add GOOGLE-MAPS API\r\n{/* <Wrapper apiKey={\"AIzaSyDJT6m1salwRSDPKWAljuVH5HhV658v7ks\"} render={render}>\r\n\t<MyMapComponent />\r\n</Wrapper> */}\r\n\r\n// const render = (status) => {\r\n// \tconsole.log(status === Status.LOADING);\r\n// \tif (status === Status.LOADING) return <h3>Carganod...</h3>;\r\n// \tif (status === Status.FAILURE) return <h3>{status} ...</h3>;\r\n// \treturn null;\r\n// };\r\n\r\n// function MyMapComponent({\r\n// \tcenter,\r\n// \tzoom,\r\n// }) {\r\n// \tconst ref = useRef();\r\n\r\n// \tuseEffect(() => {\r\n// \t  new window.google.maps.Map(ref.current, {\r\n// \t\t\tcenter,\r\n// \t\t\tzoom,\r\n// \t  });\r\n// \t});\r\n\r\n// \treturn <div ref={ref} id=\"map\" />;\r\n// }\r\n\r\nexport default AppraisalSection1;\r\n","import { useMemo }               from \"react\";\r\nimport { useForm, useFormState } from \"react-hook-form\";\r\nimport { useParams }             from \"react-router-dom\";\r\n\r\nimport { deepAccessObj, getTime, isValidArray } from \"Helpers\";\r\nimport { useHandlerMutation }                   from \"Helpers/Hooks\";\r\nimport section1Api                              from \"Store/api/section1Api\";\r\nimport AppraisalSection1                        from \"./AppraisalSection1\";\r\n\r\nconst DEFAULT_FETCH_DATA = {\r\n\t appraise : {\r\n\t\tpage_one : { background : {}, general_information : {}, statement_warning : {} },\r\n\t},\r\n};\r\n\r\nconst AppraisalSection1Container = ({ appraise }) => {\r\n\r\n\tconst { id : appraiseId } = useParams();\r\n\r\n\t// ------------> RTK-Q <---------------\r\n\tconst [ editApprasial, { isLoading  : isLoadingMutation } ] = useHandlerMutation({ toastName : \"apprasialCRUD\" });\r\n\r\n\tconst { background, general_information, statement_warning } = appraise.page_one;\r\n\r\n\t// ------------> useHookForm <---------------\r\n\tconst defaultValues  = useMemo(() => ({\r\n\t\tbackground,\r\n\t\tgeneral_information : {\r\n\t\t\t...general_information,\r\n\t\t\talignment_date    : getTime(general_information?.alignment_date),\r\n\t\t\tcontract_date     : getTime(general_information?.contract_date),\r\n\t\t\tdate_judgment     : getTime(general_information?.date_judgment),\r\n\t\t\tdeed_date         : getTime(general_information?.deed_date),\r\n\t\t\tdate_other_source : getTime(general_information?.date_other_source),\r\n\t\t},\r\n\t\tstatement_warning,\r\n\t\tlong_dmsh : {\r\n\t\t\tdegree     : \"\",\r\n\t\t\tminutes    : \"\",\r\n\t\t\tseconds    : \"\",\r\n\t\t\themisphere : \"\",\r\n\t\t},\r\n\t\tlat_dmsh : {\r\n\t\t\tdegree     : \"\",\r\n\t\t\tminutes    : \"\",\r\n\t\t\tseconds    : \"\",\r\n\t\t\themisphere : \"\",\r\n\t\t},\r\n\t}), []);\r\n\r\n\tconst hookForm = useForm({ defaultValues });\r\n\r\n\tconst { control, handleSubmit } = hookForm;\r\n\r\n\tconst { dirtyFields } = useFormState({ control });\r\n\r\n\t// ------------> submitData <---------------\r\n\tconst getValidDateToSubmit = (dateToSubmit, defaultDate, key) => {\r\n\t\tif (isDirtyDate(key)) {\r\n\t\t\tif (isFlatPickerDate(dateToSubmit)) {\r\n\t\t\t\treturn  dateToSubmit[0];\r\n\t\t\t}\r\n\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\tif (isInvalidDate(defaultDate)) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\treturn defaultDate;\r\n\t};\r\n\r\n\tconst isFlatPickerDate = (dateToSubmit) => isValidArray(dateToSubmit);\r\n\r\n\tconst isDirtyDate = (key) => deepAccessObj(key, dirtyFields);\r\n\r\n\tconst isInvalidDate = (defaultDate) => (defaultDate === null || defaultDate?.length === 0);\r\n\r\n\tconst deleteDmshGeoReferences = (dataToSubmit) => {\r\n\t\tdelete dataToSubmit[\"long_dmsh\"];\r\n\t\tdelete dataToSubmit[\"lat_dmsh\"];\r\n\t};\r\n\r\n\tconst buildDataToSubmit = (formData) => {\r\n\t\tconst {\r\n\t\t\talignment_date,\r\n\t\t\tcontract_date,\r\n\t\t\tdate_judgment,\r\n\t\t\tdeed_date,\r\n\t\t\tdate_other_source,\r\n\t\t} = formData.general_information;\r\n\r\n\r\n\t\tconst dataToSubmit = {\r\n\t\t\t...formData,\r\n\t\t\tgeneral_information : {\r\n\t\t\t\t...formData.general_information,\r\n\t\t\t\talignment_date    : getValidDateToSubmit(alignment_date, general_information?.alignment_date, \"general_information.alignment_date\"),\r\n\t\t\t\tcontract_date     : getValidDateToSubmit(contract_date, general_information?.contract_date, \"general_information.contract_date\"),\r\n\t\t\t\tdate_judgment     : getValidDateToSubmit(date_judgment, general_information?.date_judgment, \"general_information.date_judgment\"),\r\n\t\t\t\tdeed_date         : getValidDateToSubmit(deed_date, general_information?.deed_date, \"general_information.deed_date\"),\r\n\t\t\t\tdate_other_source : getValidDateToSubmit(date_other_source, general_information?.date_other_source, \"general_information.date_other_source\"),\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tdeleteDmshGeoReferences(dataToSubmit);\r\n\r\n\t\treturn dataToSubmit;\r\n\t};\r\n\r\n\tconst onSubmit = handleSubmit(async (formData) => {\r\n\t\tconst dataToSubmit = buildDataToSubmit(formData);\r\n\t\tawait editApprasial({\r\n\t\t\tmodule : `appraisals/page-one/${appraiseId}`,\r\n\t\t\tmethod : \"PUT\",\r\n\t\t\tdata   : dataToSubmit,\r\n\t\t\ttags   : [\"appraisals\", \"apprasial_details\"],\r\n\t\t});\r\n\t});\r\n\r\n\treturn (\r\n\t\t<AppraisalSection1\r\n\t\t\tdelegations={{\r\n\t\t\t\tonSubmit,\r\n\t\t\t\thookForm,\r\n\t\t\t\tisLoading : isLoadingMutation,\r\n\t\t\t\tmapCenter : { lat : general_information.lat, lng : general_information.long },\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst  AppraisalHOCPageFetcher = (Wrapped) => () => {\r\n\tconst { id : appraiseId } = useParams();\r\n\r\n\tconst { data = DEFAULT_FETCH_DATA, isFetching  } = section1Api.useGetSection1Query(appraiseId);\r\n\r\n\r\n\tif (isFetching) {\r\n\t\treturn  <>Cargando Formulario...</>;\r\n\t}\r\n\r\n\tconst { appraise } = data;\r\n\r\n\treturn <Wrapped appraise={appraise} />;\r\n};\r\n\r\nexport default AppraisalHOCPageFetcher(AppraisalSection1Container);\r\n"],"names":["tabs","title","Tab","BackgroundForm","sectionTitle","GeneralInformationForm","DeclarationsForm","delegations","onSubmit","hookForm","isLoading","mapCenter","formState","isDirty","id","currentIndex","section","isSubmitingData","DEFAULT_FETCH_DATA","appraise","page_one","background","general_information","statement_warning","Wrapped","appraiseId","useParams","editApprasial","isLoadingMutation","useHandlerMutation","toastName","defaultValues","useMemo","alignment_date","getTime","contract_date","date_judgment","deed_date","date_other_source","long_dmsh","degree","minutes","seconds","hemisphere","lat_dmsh","useForm","control","handleSubmit","dirtyFields","useFormState","getValidDateToSubmit","dateToSubmit","defaultDate","key","isDirtyDate","isFlatPickerDate","isInvalidDate","isValidArray","deepAccessObj","length","async","dataToSubmit","formData","deleteDmshGeoReferences","buildDataToSubmit","module","method","data","tags","lat","lng","long","isFetching","section1Api","useGetSection1Query"],"sourceRoot":""}